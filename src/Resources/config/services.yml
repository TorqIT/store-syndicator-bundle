services:
  # default configuration for services in *this* file
  _defaults:
    # automatically injects dependencies in your services
    autowire: true
    # automatically registers your services as commands, event subscribers, etc.
    autoconfigure: true
    # this means you cannot fetch services directly from the container via $container->get()
    # if you need to do this, you can override this setting on individual services
    public: false

  # controllers are imported separately to make sure they're public
  # and have a tag that allows actions to type-hint services
  TorqIT\StoreSyndicatorBundle\Controller\:
    resource: "../../Controller"
    public: true
    tags: ["controller.service_arguments"]

  TorqIT\StoreSyndicatorBundle\Services\:
    resource: "../../Services"
    public: true
    tags: ["sync.service_arguments"]

  # The migration installer needs the bundle it is operating on upon construction to be able to build its migration configuration.
  # As bundles can't be directly used as service argument, we need to make use of the expression language to fetch the bundle
  # from the kernel upon construction.
  TorqIT\StoreSyndicatorBundle\Installer:
    public: true
    arguments:
      # fetch the bundle via expression language
      $bundle: "@=service('kernel').getBundle('StoreSyndicatorBundle')"
# add more services, or override services that need manual wiring
#    TorqIT\StoreSyndicatorBundle\ExampleClass:
#        arguments:
#            - "@service_id"
#            - "plain_value"
#            - "%parameter%"
